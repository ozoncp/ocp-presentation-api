// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ozoncp/ocp-presentation-api/internal/repo/slide (interfaces: Repo)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/ozoncp/ocp-presentation-api/internal/model"
)

// MockRepo is a mock of Repo interface.
type MockRepo struct {
	ctrl     *gomock.Controller
	recorder *MockRepoMockRecorder
}

// MockRepoMockRecorder is the mock recorder for MockRepo.
type MockRepoMockRecorder struct {
	mock *MockRepo
}

// NewMockRepo creates a new mock instance.
func NewMockRepo(ctrl *gomock.Controller) *MockRepo {
	mock := &MockRepo{ctrl: ctrl}
	mock.recorder = &MockRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepo) EXPECT() *MockRepoMockRecorder {
	return m.recorder
}

// AddSlide mocks base method.
func (m *MockRepo) AddSlide(arg0 *model.Slide) (uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddSlide", arg0)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddSlide indicates an expected call of AddSlide.
func (mr *MockRepoMockRecorder) AddSlide(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddSlide", reflect.TypeOf((*MockRepo)(nil).AddSlide), arg0)
}

// AddSlides mocks base method.
func (m *MockRepo) AddSlides(arg0 []model.Slide) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddSlides", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddSlides indicates an expected call of AddSlides.
func (mr *MockRepoMockRecorder) AddSlides(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddSlides", reflect.TypeOf((*MockRepo)(nil).AddSlides), arg0)
}

// GetSlide mocks base method.
func (m *MockRepo) GetSlide(arg0 uint64) (*model.Slide, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSlide", arg0)
	ret0, _ := ret[0].(*model.Slide)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSlide indicates an expected call of GetSlide.
func (mr *MockRepoMockRecorder) GetSlide(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSlide", reflect.TypeOf((*MockRepo)(nil).GetSlide), arg0)
}

// RemoveSlide mocks base method.
func (m *MockRepo) RemoveSlide(arg0 uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RemoveSlide", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// RemoveSlide indicates an expected call of RemoveSlide.
func (mr *MockRepoMockRecorder) RemoveSlide(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RemoveSlide", reflect.TypeOf((*MockRepo)(nil).RemoveSlide), arg0)
}
