// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.2
// source: api/ocp-slide-api/ocp-slide-api.proto

package ocp_slide_api

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ContentType int32

const (
	ContentType_Question ContentType = 0
	ContentType_Video    ContentType = 1
	ContentType_Document ContentType = 2
	ContentType_Task     ContentType = 3
)

// Enum value maps for ContentType.
var (
	ContentType_name = map[int32]string{
		0: "Question",
		1: "Video",
		2: "Document",
		3: "Task",
	}
	ContentType_value = map[string]int32{
		"Question": 0,
		"Video":    1,
		"Document": 2,
		"Task":     3,
	}
)

func (x ContentType) Enum() *ContentType {
	p := new(ContentType)
	*p = x
	return p
}

func (x ContentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContentType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_ocp_slide_api_ocp_slide_api_proto_enumTypes[0].Descriptor()
}

func (ContentType) Type() protoreflect.EnumType {
	return &file_api_ocp_slide_api_ocp_slide_api_proto_enumTypes[0]
}

func (x ContentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContentType.Descriptor instead.
func (ContentType) EnumDescriptor() ([]byte, []int) {
	return file_api_ocp_slide_api_ocp_slide_api_proto_rawDescGZIP(), []int{0}
}

type CreateSlideV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slide *NewSlide `protobuf:"bytes,1,opt,name=slide,proto3" json:"slide,omitempty"`
}

func (x *CreateSlideV1Request) Reset() {
	*x = CreateSlideV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSlideV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSlideV1Request) ProtoMessage() {}

func (x *CreateSlideV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSlideV1Request.ProtoReflect.Descriptor instead.
func (*CreateSlideV1Request) Descriptor() ([]byte, []int) {
	return file_api_ocp_slide_api_ocp_slide_api_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSlideV1Request) GetSlide() *NewSlide {
	if x != nil {
		return x.Slide
	}
	return nil
}

type CreateSlideV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlideId uint64 `protobuf:"varint,1,opt,name=slide_id,json=slideId,proto3" json:"slide_id,omitempty"`
}

func (x *CreateSlideV1Response) Reset() {
	*x = CreateSlideV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSlideV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSlideV1Response) ProtoMessage() {}

func (x *CreateSlideV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSlideV1Response.ProtoReflect.Descriptor instead.
func (*CreateSlideV1Response) Descriptor() ([]byte, []int) {
	return file_api_ocp_slide_api_ocp_slide_api_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSlideV1Response) GetSlideId() uint64 {
	if x != nil {
		return x.SlideId
	}
	return 0
}

type MultiCreateSlidesV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slides []*NewSlide `protobuf:"bytes,1,rep,name=slides,proto3" json:"slides,omitempty"`
}

func (x *MultiCreateSlidesV1Request) Reset() {
	*x = MultiCreateSlidesV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiCreateSlidesV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiCreateSlidesV1Request) ProtoMessage() {}

func (x *MultiCreateSlidesV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiCreateSlidesV1Request.ProtoReflect.Descriptor instead.
func (*MultiCreateSlidesV1Request) Descriptor() ([]byte, []int) {
	return file_api_ocp_slide_api_ocp_slide_api_proto_rawDescGZIP(), []int{2}
}

func (x *MultiCreateSlidesV1Request) GetSlides() []*NewSlide {
	if x != nil {
		return x.Slides
	}
	return nil
}

type MultiCreateSlidesV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumberOfCreatedSlides int64 `protobuf:"varint,1,opt,name=number_of_created_slides,json=numberOfCreatedSlides,proto3" json:"number_of_created_slides,omitempty"`
}

func (x *MultiCreateSlidesV1Response) Reset() {
	*x = MultiCreateSlidesV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiCreateSlidesV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiCreateSlidesV1Response) ProtoMessage() {}

func (x *MultiCreateSlidesV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiCreateSlidesV1Response.ProtoReflect.Descriptor instead.
func (*MultiCreateSlidesV1Response) Descriptor() ([]byte, []int) {
	return file_api_ocp_slide_api_ocp_slide_api_proto_rawDescGZIP(), []int{3}
}

func (x *MultiCreateSlidesV1Response) GetNumberOfCreatedSlides() int64 {
	if x != nil {
		return x.NumberOfCreatedSlides
	}
	return 0
}

type UpdateSlideV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slide *Slide `protobuf:"bytes,1,opt,name=slide,proto3" json:"slide,omitempty"`
}

func (x *UpdateSlideV1Request) Reset() {
	*x = UpdateSlideV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSlideV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSlideV1Request) ProtoMessage() {}

func (x *UpdateSlideV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSlideV1Request.ProtoReflect.Descriptor instead.
func (*UpdateSlideV1Request) Descriptor() ([]byte, []int) {
	return file_api_ocp_slide_api_ocp_slide_api_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateSlideV1Request) GetSlide() *Slide {
	if x != nil {
		return x.Slide
	}
	return nil
}

type UpdateSlideV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Found bool `protobuf:"varint,1,opt,name=found,proto3" json:"found,omitempty"`
}

func (x *UpdateSlideV1Response) Reset() {
	*x = UpdateSlideV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSlideV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSlideV1Response) ProtoMessage() {}

func (x *UpdateSlideV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSlideV1Response.ProtoReflect.Descriptor instead.
func (*UpdateSlideV1Response) Descriptor() ([]byte, []int) {
	return file_api_ocp_slide_api_ocp_slide_api_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateSlideV1Response) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

type DescribeSlideV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlideId uint64 `protobuf:"varint,1,opt,name=slide_id,json=slideId,proto3" json:"slide_id,omitempty"`
}

func (x *DescribeSlideV1Request) Reset() {
	*x = DescribeSlideV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeSlideV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeSlideV1Request) ProtoMessage() {}

func (x *DescribeSlideV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeSlideV1Request.ProtoReflect.Descriptor instead.
func (*DescribeSlideV1Request) Descriptor() ([]byte, []int) {
	return file_api_ocp_slide_api_ocp_slide_api_proto_rawDescGZIP(), []int{6}
}

func (x *DescribeSlideV1Request) GetSlideId() uint64 {
	if x != nil {
		return x.SlideId
	}
	return 0
}

type DescribeSlideV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slide *Slide `protobuf:"bytes,1,opt,name=slide,proto3" json:"slide,omitempty"`
}

func (x *DescribeSlideV1Response) Reset() {
	*x = DescribeSlideV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeSlideV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeSlideV1Response) ProtoMessage() {}

func (x *DescribeSlideV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeSlideV1Response.ProtoReflect.Descriptor instead.
func (*DescribeSlideV1Response) Descriptor() ([]byte, []int) {
	return file_api_ocp_slide_api_ocp_slide_api_proto_rawDescGZIP(), []int{7}
}

func (x *DescribeSlideV1Response) GetSlide() *Slide {
	if x != nil {
		return x.Slide
	}
	return nil
}

type ListSlidesV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  uint64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset uint64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *ListSlidesV1Request) Reset() {
	*x = ListSlidesV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSlidesV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSlidesV1Request) ProtoMessage() {}

func (x *ListSlidesV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSlidesV1Request.ProtoReflect.Descriptor instead.
func (*ListSlidesV1Request) Descriptor() ([]byte, []int) {
	return file_api_ocp_slide_api_ocp_slide_api_proto_rawDescGZIP(), []int{8}
}

func (x *ListSlidesV1Request) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListSlidesV1Request) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListSlidesV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slides []*Slide `protobuf:"bytes,1,rep,name=slides,proto3" json:"slides,omitempty"`
}

func (x *ListSlidesV1Response) Reset() {
	*x = ListSlidesV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSlidesV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSlidesV1Response) ProtoMessage() {}

func (x *ListSlidesV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSlidesV1Response.ProtoReflect.Descriptor instead.
func (*ListSlidesV1Response) Descriptor() ([]byte, []int) {
	return file_api_ocp_slide_api_ocp_slide_api_proto_rawDescGZIP(), []int{9}
}

func (x *ListSlidesV1Response) GetSlides() []*Slide {
	if x != nil {
		return x.Slides
	}
	return nil
}

type RemoveSlideV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlideId uint64 `protobuf:"varint,1,opt,name=slide_id,json=slideId,proto3" json:"slide_id,omitempty"`
}

func (x *RemoveSlideV1Request) Reset() {
	*x = RemoveSlideV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveSlideV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSlideV1Request) ProtoMessage() {}

func (x *RemoveSlideV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSlideV1Request.ProtoReflect.Descriptor instead.
func (*RemoveSlideV1Request) Descriptor() ([]byte, []int) {
	return file_api_ocp_slide_api_ocp_slide_api_proto_rawDescGZIP(), []int{10}
}

func (x *RemoveSlideV1Request) GetSlideId() uint64 {
	if x != nil {
		return x.SlideId
	}
	return 0
}

type RemoveSlideV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Found bool `protobuf:"varint,1,opt,name=found,proto3" json:"found,omitempty"`
}

func (x *RemoveSlideV1Response) Reset() {
	*x = RemoveSlideV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveSlideV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveSlideV1Response) ProtoMessage() {}

func (x *RemoveSlideV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveSlideV1Response.ProtoReflect.Descriptor instead.
func (*RemoveSlideV1Response) Descriptor() ([]byte, []int) {
	return file_api_ocp_slide_api_ocp_slide_api_proto_rawDescGZIP(), []int{11}
}

func (x *RemoveSlideV1Response) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

type NewSlide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PresentationId uint64      `protobuf:"varint,1,opt,name=presentation_id,json=presentationId,proto3" json:"presentation_id,omitempty"`
	Number         uint64      `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	Type           ContentType `protobuf:"varint,3,opt,name=type,proto3,enum=ocp.slide.api.ContentType" json:"type,omitempty"`
}

func (x *NewSlide) Reset() {
	*x = NewSlide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewSlide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewSlide) ProtoMessage() {}

func (x *NewSlide) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewSlide.ProtoReflect.Descriptor instead.
func (*NewSlide) Descriptor() ([]byte, []int) {
	return file_api_ocp_slide_api_ocp_slide_api_proto_rawDescGZIP(), []int{12}
}

func (x *NewSlide) GetPresentationId() uint64 {
	if x != nil {
		return x.PresentationId
	}
	return 0
}

func (x *NewSlide) GetNumber() uint64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *NewSlide) GetType() ContentType {
	if x != nil {
		return x.Type
	}
	return ContentType_Question
}

type Slide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PresentationId uint64      `protobuf:"varint,2,opt,name=presentation_id,json=presentationId,proto3" json:"presentation_id,omitempty"`
	Number         uint64      `protobuf:"varint,3,opt,name=number,proto3" json:"number,omitempty"`
	Type           ContentType `protobuf:"varint,4,opt,name=type,proto3,enum=ocp.slide.api.ContentType" json:"type,omitempty"`
}

func (x *Slide) Reset() {
	*x = Slide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Slide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Slide) ProtoMessage() {}

func (x *Slide) ProtoReflect() protoreflect.Message {
	mi := &file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Slide.ProtoReflect.Descriptor instead.
func (*Slide) Descriptor() ([]byte, []int) {
	return file_api_ocp_slide_api_ocp_slide_api_proto_rawDescGZIP(), []int{13}
}

func (x *Slide) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Slide) GetPresentationId() uint64 {
	if x != nil {
		return x.PresentationId
	}
	return 0
}

func (x *Slide) GetNumber() uint64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Slide) GetType() ContentType {
	if x != nil {
		return x.Type
	}
	return ContentType_Question
}

var File_api_ocp_slide_api_ocp_slide_api_proto protoreflect.FileDescriptor

var file_api_ocp_slide_api_ocp_slide_api_proto_rawDesc = []byte{
	0x0a, 0x25, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x63, 0x70, 0x2d, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x2d,
	0x61, 0x70, 0x69, 0x2f, 0x6f, 0x63, 0x70, 0x2d, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x2d, 0x61, 0x70,
	0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x6f, 0x63, 0x70, 0x2e, 0x73, 0x6c, 0x69,
	0x64, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4f, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x37, 0x0a, 0x05, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4e,
	0x65, 0x77, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10,
	0x01, 0x52, 0x05, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x22, 0x32, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x49, 0x64, 0x22, 0x5a, 0x0a, 0x1a,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x69, 0x64, 0x65,
	0x73, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x6c,
	0x69, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f, 0x63, 0x70,
	0x2e, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x65, 0x77, 0x53, 0x6c,
	0x69, 0x64, 0x65, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x92, 0x01, 0x05, 0x08, 0x01, 0x10, 0x80, 0x08,
	0x52, 0x06, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x73, 0x22, 0x56, 0x0a, 0x1b, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x73, 0x56, 0x31, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x6c, 0x69,
	0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x4f, 0x66, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x73,
	0x22, 0x4c, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x56,
	0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x05, 0x73, 0x6c, 0x69, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x73, 0x6c,
	0x69, 0x64, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x05, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x22, 0x2d,
	0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x56, 0x31, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0x3c, 0x0a,
	0x16, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x56, 0x31,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x08, 0x73, 0x6c, 0x69, 0x64, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02,
	0x28, 0x01, 0x52, 0x07, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x17, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x56, 0x31, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x73, 0x6c, 0x69, 0x64,
	0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x52, 0x05, 0x73, 0x6c, 0x69,
	0x64, 0x65, 0x22, 0x4f, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x73,
	0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x32, 0x05, 0x18,
	0x80, 0x08, 0x28, 0x01, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x22, 0x44, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6c, 0x69, 0x64, 0x65,
	0x73, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x73,
	0x6c, 0x69, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x63,
	0x70, 0x2e, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x6c, 0x69, 0x64,
	0x65, 0x52, 0x06, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x73, 0x22, 0x3a, 0x0a, 0x14, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x22, 0x0a, 0x08, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x28, 0x01, 0x52, 0x07, 0x73, 0x6c,
	0x69, 0x64, 0x65, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53,
	0x6c, 0x69, 0x64, 0x65, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66,
	0x6f, 0x75, 0x6e, 0x64, 0x22, 0x8d, 0x01, 0x0a, 0x08, 0x4e, 0x65, 0x77, 0x53, 0x6c, 0x69, 0x64,
	0x65, 0x12, 0x30, 0x0a, 0x0f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32,
	0x02, 0x28, 0x01, 0x52, 0x0e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x28, 0x01, 0x52, 0x06, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x05, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x12, 0x17,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32,
	0x02, 0x28, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x0f, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x28, 0x01, 0x52, 0x0e, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02,
	0x28, 0x01, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x73,
	0x6c, 0x69, 0x64, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x2a, 0x3e, 0x0a, 0x0b, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x10, 0x02,
	0x12, 0x08, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x10, 0x03, 0x32, 0xd2, 0x05, 0x0a, 0x08, 0x53,
	0x6c, 0x69, 0x64, 0x65, 0x41, 0x50, 0x49, 0x12, 0x6d, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x56, 0x31, 0x12, 0x23, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x73,
	0x6c, 0x69, 0x64, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x6c, 0x69, 0x64, 0x65, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x6f, 0x63, 0x70, 0x2e, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x22, 0x09, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x13, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x73, 0x56, 0x31, 0x12, 0x29,
	0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x73,
	0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6f, 0x63, 0x70, 0x2e,
	0x73, 0x6c, 0x69, 0x64, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x73, 0x56, 0x31, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x22, 0x0a, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x73, 0x12, 0x6d, 0x0a, 0x0d, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x56, 0x31, 0x12, 0x23, 0x2e, 0x6f, 0x63, 0x70,
	0x2e, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x56, 0x31, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x22, 0x09, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x12, 0x7e, 0x0a, 0x0f, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x56, 0x31, 0x12, 0x25, 0x2e, 0x6f, 0x63,
	0x70, 0x2e, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x6c, 0x69, 0x64, 0x65,
	0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x2f, 0x7b, 0x73,
	0x6c, 0x69, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x6b, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x6c, 0x69, 0x64, 0x65, 0x73, 0x56, 0x31, 0x12, 0x22, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x73,
	0x6c, 0x69, 0x64, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6c, 0x69,
	0x64, 0x65, 0x73, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6f,
	0x63, 0x70, 0x2e, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x73, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x6c, 0x69, 0x64, 0x65, 0x73, 0x12, 0x78, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53,
	0x6c, 0x69, 0x64, 0x65, 0x56, 0x31, 0x12, 0x23, 0x2e, 0x6f, 0x63, 0x70, 0x2e, 0x73, 0x6c, 0x69,
	0x64, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x6c, 0x69,
	0x64, 0x65, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6f, 0x63,
	0x70, 0x2e, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x2a, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x6c, 0x69, 0x64, 0x65, 0x2f, 0x7b, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x42,
	0x3a, 0x5a, 0x38, 0x67, 0x69, 0x68, 0x74, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x7a,
	0x6f, 0x6e, 0x63, 0x70, 0x2f, 0x6f, 0x63, 0x70, 0x2d, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6f, 0x63,
	0x70, 0x2d, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x2d, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_api_ocp_slide_api_ocp_slide_api_proto_rawDescOnce sync.Once
	file_api_ocp_slide_api_ocp_slide_api_proto_rawDescData = file_api_ocp_slide_api_ocp_slide_api_proto_rawDesc
)

func file_api_ocp_slide_api_ocp_slide_api_proto_rawDescGZIP() []byte {
	file_api_ocp_slide_api_ocp_slide_api_proto_rawDescOnce.Do(func() {
		file_api_ocp_slide_api_ocp_slide_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_ocp_slide_api_ocp_slide_api_proto_rawDescData)
	})
	return file_api_ocp_slide_api_ocp_slide_api_proto_rawDescData
}

var file_api_ocp_slide_api_ocp_slide_api_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_api_ocp_slide_api_ocp_slide_api_proto_goTypes = []interface{}{
	(ContentType)(0),                    // 0: ocp.slide.api.ContentType
	(*CreateSlideV1Request)(nil),        // 1: ocp.slide.api.CreateSlideV1Request
	(*CreateSlideV1Response)(nil),       // 2: ocp.slide.api.CreateSlideV1Response
	(*MultiCreateSlidesV1Request)(nil),  // 3: ocp.slide.api.MultiCreateSlidesV1Request
	(*MultiCreateSlidesV1Response)(nil), // 4: ocp.slide.api.MultiCreateSlidesV1Response
	(*UpdateSlideV1Request)(nil),        // 5: ocp.slide.api.UpdateSlideV1Request
	(*UpdateSlideV1Response)(nil),       // 6: ocp.slide.api.UpdateSlideV1Response
	(*DescribeSlideV1Request)(nil),      // 7: ocp.slide.api.DescribeSlideV1Request
	(*DescribeSlideV1Response)(nil),     // 8: ocp.slide.api.DescribeSlideV1Response
	(*ListSlidesV1Request)(nil),         // 9: ocp.slide.api.ListSlidesV1Request
	(*ListSlidesV1Response)(nil),        // 10: ocp.slide.api.ListSlidesV1Response
	(*RemoveSlideV1Request)(nil),        // 11: ocp.slide.api.RemoveSlideV1Request
	(*RemoveSlideV1Response)(nil),       // 12: ocp.slide.api.RemoveSlideV1Response
	(*NewSlide)(nil),                    // 13: ocp.slide.api.NewSlide
	(*Slide)(nil),                       // 14: ocp.slide.api.Slide
}
var file_api_ocp_slide_api_ocp_slide_api_proto_depIdxs = []int32{
	13, // 0: ocp.slide.api.CreateSlideV1Request.slide:type_name -> ocp.slide.api.NewSlide
	13, // 1: ocp.slide.api.MultiCreateSlidesV1Request.slides:type_name -> ocp.slide.api.NewSlide
	14, // 2: ocp.slide.api.UpdateSlideV1Request.slide:type_name -> ocp.slide.api.Slide
	14, // 3: ocp.slide.api.DescribeSlideV1Response.slide:type_name -> ocp.slide.api.Slide
	14, // 4: ocp.slide.api.ListSlidesV1Response.slides:type_name -> ocp.slide.api.Slide
	0,  // 5: ocp.slide.api.NewSlide.type:type_name -> ocp.slide.api.ContentType
	0,  // 6: ocp.slide.api.Slide.type:type_name -> ocp.slide.api.ContentType
	1,  // 7: ocp.slide.api.SlideAPI.CreateSlideV1:input_type -> ocp.slide.api.CreateSlideV1Request
	3,  // 8: ocp.slide.api.SlideAPI.MultiCreateSlidesV1:input_type -> ocp.slide.api.MultiCreateSlidesV1Request
	5,  // 9: ocp.slide.api.SlideAPI.UpdateSlideV1:input_type -> ocp.slide.api.UpdateSlideV1Request
	7,  // 10: ocp.slide.api.SlideAPI.DescribeSlideV1:input_type -> ocp.slide.api.DescribeSlideV1Request
	9,  // 11: ocp.slide.api.SlideAPI.ListSlidesV1:input_type -> ocp.slide.api.ListSlidesV1Request
	11, // 12: ocp.slide.api.SlideAPI.RemoveSlideV1:input_type -> ocp.slide.api.RemoveSlideV1Request
	2,  // 13: ocp.slide.api.SlideAPI.CreateSlideV1:output_type -> ocp.slide.api.CreateSlideV1Response
	4,  // 14: ocp.slide.api.SlideAPI.MultiCreateSlidesV1:output_type -> ocp.slide.api.MultiCreateSlidesV1Response
	6,  // 15: ocp.slide.api.SlideAPI.UpdateSlideV1:output_type -> ocp.slide.api.UpdateSlideV1Response
	8,  // 16: ocp.slide.api.SlideAPI.DescribeSlideV1:output_type -> ocp.slide.api.DescribeSlideV1Response
	10, // 17: ocp.slide.api.SlideAPI.ListSlidesV1:output_type -> ocp.slide.api.ListSlidesV1Response
	12, // 18: ocp.slide.api.SlideAPI.RemoveSlideV1:output_type -> ocp.slide.api.RemoveSlideV1Response
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_api_ocp_slide_api_ocp_slide_api_proto_init() }
func file_api_ocp_slide_api_ocp_slide_api_proto_init() {
	if File_api_ocp_slide_api_ocp_slide_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSlideV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSlideV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiCreateSlidesV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiCreateSlidesV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSlideV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSlideV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeSlideV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeSlideV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSlidesV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSlidesV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveSlideV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveSlideV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewSlide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Slide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_ocp_slide_api_ocp_slide_api_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_ocp_slide_api_ocp_slide_api_proto_goTypes,
		DependencyIndexes: file_api_ocp_slide_api_ocp_slide_api_proto_depIdxs,
		EnumInfos:         file_api_ocp_slide_api_ocp_slide_api_proto_enumTypes,
		MessageInfos:      file_api_ocp_slide_api_ocp_slide_api_proto_msgTypes,
	}.Build()
	File_api_ocp_slide_api_ocp_slide_api_proto = out.File
	file_api_ocp_slide_api_ocp_slide_api_proto_rawDesc = nil
	file_api_ocp_slide_api_ocp_slide_api_proto_goTypes = nil
	file_api_ocp_slide_api_ocp_slide_api_proto_depIdxs = nil
}
