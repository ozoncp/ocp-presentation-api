version: "3.9"

services:
  postgres:
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATA: /data/postgres
    volumes:
       - pg_data:/data/postgres
       - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    networks:
      - backend
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-pgadmin4}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin_data:/root/.pgadmin
    ports:
      - ${PGADMIN_PORT:-5050}:80
    networks:
      - backend
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper
    ports:
      - 2181:2181
    environment:
      zk_id: "1"
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2
    networks:
      - backend
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka
    depends_on:
      - zookeeper
    ports:
      - 9094:9094
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:32181"
      KAFKA_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://kafka:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
    networks:
      - backend
    restart: unless-stopped

  jaeger:
    image: jaegertracing/all-in-one
    ports:
      - 6831:6831/udp
      - 16686:16686
    networks:
      - backend
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - backend
    restart: unless-stopped

  ocp-presentation-api:
    build: .
    environment:
      ADDRESS: 0.0.0.0:8000

      POSTGRES_DB: ocp_presentation_api
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}

      CHUNK_SIZE: 10

      KAFKA_BROKERS: "[kafka:9094]"

      JAEGER_AGENT_HOST: jaeger
      JAEGER_AGENT_PORT: 6831
    depends_on:
      - postgres
    ports:
      - ${PORT:-8000}:8000
    networks:
      - backend
    restart: unless-stopped

    ocp-slide-api:
      build: .
      environment:
        ADDRESS: 0.0.0.0:8001

        POSTGRES_DB: ocp_presentation_api
        POSTGRES_USER: ${POSTGRES_USER:-postgres}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
        POSTGRES_HOST: postgres
        POSTGRES_PORT: ${POSTGRES_PORT:-5432}

        CHUNK_SIZE: 10

        KAFKA_BROKERS: "[kafka:9094]"

        JAEGER_AGENT_HOST: jaeger
        JAEGER_AGENT_PORT: 6831
      depends_on:
        - postgres
      ports:
        - ${PORT:-8001}:8001
      networks:
        - backend
      restart: unless-stopped

networks:
  backend:
    driver: bridge

volumes:
  pg_data:
  pgadmin_data:
